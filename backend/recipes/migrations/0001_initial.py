# Generated by Django 4.2.5 on 2023-09-21 05:58

import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='ingredient name')),
                ('measurement_unit', models.CharField(max_length=20, verbose_name='unit of measurement')),
            ],
            options={
                'verbose_name_plural': 'Ingredients',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='IngredientsRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Minimaum value is 1!')], verbose_name='Ingredient quantity')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients_list', to='recipes.ingredient', verbose_name='description')),
            ],
            options={
                'verbose_name': 'List of ingredients for recipe',
                'verbose_name_plural': 'List of ingredients for recipes',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='recipe name')),
                ('description', models.TextField(help_text='Write a description', verbose_name='recipe description')),
                ('image', models.ImageField(upload_to='foodgram/images/', verbose_name='meal picture')),
                ('cooking_time', models.SmallIntegerField(help_text='Type cooking time using minutes.', validators=[django.core.validators.MinValueValidator(1, message='Minimum value is 1!'), django.core.validators.MaxValueValidator(1440, message='Maximum value is 1440 (24h)!')])),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Publication date')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='recipe author')),
                ('ingredients', models.ManyToManyField(related_name='recipes', through='recipes.IngredientsRecipe', to='recipes.ingredient', verbose_name='Recipe ingredients')),
            ],
            options={
                'verbose_name_plural': 'Recipes',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='tag name')),
                ('colour', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None, unique=True, verbose_name='tag colour')),
                ('slug', models.SlugField(unique=True, verbose_name='tag slug')),
            ],
            options={
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='TagsRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags_list', to='recipes.recipe', verbose_name='recipe')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags_list', to='recipes.tag', verbose_name='tag')),
            ],
            options={
                'verbose_name': 'List of tags for recipe',
                'verbose_name_plural': 'List of tags for recipes',
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(related_name='recipes', through='recipes.TagsRecipe', to='recipes.tag', verbose_name='Recipe tags'),
        ),
        migrations.CreateModel(
            name='PurchasingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchasing_list', to='recipes.recipe', verbose_name='purchasing recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchasing_list', to=settings.AUTH_USER_MODEL, verbose_name='purchasing user')),
            ],
            options={
                'verbose_name': 'Recipe for purchasing',
                'verbose_name_plural': 'Recipes for purchasing',
                'ordering': ('recipe',),
            },
        ),
        migrations.AddField(
            model_name='ingredientsrecipe',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients_list', to='recipes.recipe', verbose_name='Recipe'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='recipes.recipe', verbose_name='рецепт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'Favorite',
                'verbose_name_plural': 'Favorites',
            },
        ),
        migrations.AddConstraint(
            model_name='tagsrecipe',
            constraint=models.UniqueConstraint(fields=('recipe', 'tag'), name='unique_tags_for_recipe'),
        ),
        migrations.AddConstraint(
            model_name='purchasinglist',
            constraint=models.UniqueConstraint(fields=('recipe', 'user'), name='unique_shopping_pair'),
        ),
        migrations.AddConstraint(
            model_name='ingredientsrecipe',
            constraint=models.UniqueConstraint(fields=('ingredient', 'recipe'), name='unique_ingredients_for_recipe'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_favorite'),
        ),
    ]
